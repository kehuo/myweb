{
  "1": {
    "name": "基础知识",
    "chapters": {
      "1": {
        "name": "算法在计算中的作用",
        "sections": {
          "1": {"name": "算法"},
          "2": {"name": "作为一种技术的算法"}
        }
      },
      "2": {
        "name": "算法在计算中的作用",
        "sections": {
          "1": {"name": "插入排序"},
          "2": {"name": "分析算法"},
          "3": {"name": "设计算法"}
        }
      },
      "3": {
        "name": "函数的增长",
        "sections": {
          "1": {"name": "渐进记号"},
          "2": {"name": "标准记号与常用函数"}
        }
      },
      "4": {
        "name": "分治策略",
        "sections": {
          "1": {"name": "最大子数组问题"},
          "2": {"name": "矩阵乘法的 Strassen 算法"},
          "3": {"name": "用带入法求解递归式"},
          "4": {"name": "用递归树方法求解递归式"},
          "5": {"name": "用主方法求解递归式"},
          "6": {"name": "证明主定理"}
        }
      },
      "5": {
        "name": "概率分析和随机算法",
        "sections": {
          "1": {"name": "雇佣问题"},
          "2": {"name": "指示器随机变量"},
          "3": {"name": "随机算法"},
          "4": {"name": "概率分析和指示器随机变量的进一步使用"}
        }
      }
    }
  },
  "2": {
    "name": "排序和顺序统计量",
    "chapters": {
      "6": {
        "name": "堆排序",
        "sections": {
          "1": {"name": "堆"},
          "2": {"name": "维护堆的性质"},
          "3": {"name": "建堆"},
          "4": {"name": "堆排序算法"},
          "5": {"name": "优先队列"}
        }
      },
      "7": {
        "name": "快速排序",
        "sections": {
          "1": {"name": "快速排序的描述"},
          "2": {"name": "快速排序的性能"},
          "3": {"name": "快速排序的随机化版本"},
          "4": {"name": "快速排序分析"}
        }
      },
      "8": {
        "name": "线性时间排序",
        "sections": {
          "1": {"name": "排序算法的下界"},
          "2": {"name": "计数排序"},
          "3": {"name": "基数排序"},
          "4": {"name": "桶排序"}
        }
      },
      "9": {
        "name": "中位数和顺序统计量",
        "sections": {
          "1": {"name": "最小值和最大值"},
          "2": {"name": "期望为线性时间的选择算法"},
          "3": {"name": "最坏情况为线性时间的选择算法"}
        }
      }
    }
  },
  "3": {
    "name": "数据结构",
    "chapters": {
      "10": {
        "name": "基本数据结构",
        "sections": {
          "1": {"name": "栈和队列"},
          "2": {"name": "链表"},
          "3": {"name": "建堆"},
          "4": {"name": "指针和对象的实现"},
          "5": {"name": "有根树的表示"}
        }
      },
      "11": {
        "name": "散列表",
        "sections": {
          "1": {"name": "直接寻址表"},
          "2": {"name": "散列表"},
          "3": {"name": "散列函数"},
          "4": {"name": "开放寻址法"},
          "5": {"name": "完全散列"}
        }
      },
      "12": {
        "name": "二叉搜索树",
        "sections": {
          "1": {"name": "什么是二叉搜索树"},
          "2": {"name": "查询二叉搜索树"},
          "3": {"name": "插入和删除"},
          "4": {"name": "随机构建二叉搜索树"}
        }
      },
      "13": {
        "name": "红黑树",
        "sections": {
          "1": {"name": "红黑树的性质"},
          "2": {"name": "旋转"},
          "3": {"name": "插入"},
          "4": {"name": "删除"}
        }
      },
      "14": {
        "name": "数据结构的扩张",
        "sections": {
          "1": {"name": "动态顺序统计"},
          "2": {"name": "如何扩张数据结构"},
          "3": {"name": "区间树"}
        }
      }
    }
  },
  "4": {
    "name": "高级设计和分析技术",
    "chapters": {
      "15": {
        "name": "动态规划",
        "sections": {
          "1": {"name": "钢条切割"},
          "2": {"name": "矩阵链乘法"},
          "3": {"name": "动态规划原理"},
          "4": {"name": "最长公共子序列"},
          "5": {"name": "最优二叉搜索树"}
        }
      },
      "16": {
        "name": "贪心算法",
        "sections": {
          "1": {"name": "活动选择问题"},
          "2": {"name": "贪心算法原理"},
          "3": {"name": "赫夫曼编码"},
          "4": {"name": "拟阵和贪心算法"},
          "5": {"name": "用拟阵求解任务调度问题"}
        }
      },
      "17": {
        "name": "摊还分析",
        "sections": {
          "1": {"name": "聚合分析"},
          "2": {"name": "核算法"},
          "3": {"name": "势能法"},
          "4": {"name": "动态表"}
        }
      }
    }
  },
  "5": {
    "name": "高级数据结构",
    "chapters": {
      "18": {
        "name": "B树",
        "sections": {
          "1": {"name": "B树的定义"},
          "2": {"name": "B树上的基本操作"},
          "3": {"name": "从B树中删除关键字"}
        }
      },
      "19": {
        "name": "斐波那契堆",
        "sections": {
          "1": {"name": "斐波那契堆结构"},
          "2": {"name": "可合并堆操作"},
          "3": {"name": "关键字减值和删除一个节点"},
          "4": {"name": "最大度数的界"}
        }
      },
      "20": {
        "name": "van Emde Boas 树",
        "sections": {
          "1": {"name": "基本方法"},
          "2": {"name": "递归结构"},
          "3": {"name": "van Emde Boas 树"}
        }
      },
      "21": {
        "name": "用于不相交集合的数据结构",
        "sections": {
          "1": {"name": "不相交集合的操作"},
          "2": {"name": "不相交集合的链表表示"},
          "3": {"name": "不相交集合森林"},
          "4": {"name": "带路径压缩的按秩合并的分析"}
        }
      }
    }
  },
  "6": {
    "name": "图算法",
    "chapters": {
      "22": {
        "name": "基本的图算法",
        "sections": {
          "1": {"name": "图的表示"},
          "2": {"name": "广度优先搜索"},
          "3": {"name": "深度优先搜索"},
          "4": {"name": "拓扑排序"},
          "5": {"name": "强连通分量"}
        }
      },
      "23": {
        "name": "最小生成树",
        "sections": {
          "1": {"name": "最小生成树的形成"},
          "2": {"name": "Kruskal 算法和 Prim 算法"}
        }
      },
      "24": {
        "name": "单源最短路径",
        "sections": {
          "1": {"name": "bellman-Ford 算法"},
          "2": {"name": "有向无环图中的单源最短路径问题"},
          "3": {"name": "Dijkstra 算法"},
          "4": {"name": "查分约束和最短路径"},
          "5": {"name": "最短路径性质的证明"}
        }
      },
      "25": {
        "name": "所有节点对的最短路径问题",
        "sections": {
          "1": {"name": "最短路径和矩阵乘法"},
          "2": {"name": "Floyd-Warshall 算法"},
          "3": {"name": "用于稀疏图的 Johnson 算法"}
        }
      },
      "26": {
        "name": "最大流",
        "sections": {
          "1": {"name": "流网络"},
          "2": {"name": "Floyd-Fulkerson 方法"},
          "3": {"name": "最大二分分配"},
          "4": {"name": "推送-重贴标签算法"},
          "5": {"name": "前置重贴标签算法"}
        }
      }
    }
  },
  "7": {
    "name": "算法问题选编",
    "chapters": {
      "27": {
        "name": "多线程算法",
        "sections": {
          "1": {"name": "动态多线程基础"},
          "2": {"name": "多线程矩阵乘法"},
          "3": {"name": "多线程归并排序"}
        }
      },
      "28": {
        "name": "矩阵运算",
        "sections": {
          "1": {"name": "求解线性方程组"},
          "2": {"name": "矩阵求逆"},
          "3": {"name": "对称正定矩阵和最小二乘逼近"},
          "4": {"name": "查分约束和最短路径"},
          "5": {"name": "最短路径性质的证明"}
        }
      },
      "29": {
        "name": "线性规划",
        "sections": {
          "1": {"name": "标准型和松弛型"},
          "2": {"name": "将问题表达为线性规划"},
          "3": {"name": "单纯形算法"},
          "4": {"name": "对偶性"},
          "5": {"name": "初始基本可行解"}
        }
      },
      "30": {
        "name": "多项式与快速傅立叶变换",
        "sections": {
          "1": {"name": "多项式的表示"},
          "2": {"name": "DFT 与 FFT"},
          "3": {"name": "高效 FFT 实现"}
        }
      },
      "31": {
        "name": "数论算法",
        "sections": {
          "1": {"name": "基础数论概念"},
          "2": {"name": "最大公约数"},
          "3": {"name": "模运算"},
          "4": {"name": "求解模线性方程"},
          "5": {"name": "中国余数定理"},
          "6": {"name": "元素的幂"},
          "7": {"name": "RSA 公钥加密系统"},
          "8": {"name": "素数的测试"},
          "9": {"name": "整数的因子分解"}
        }
      },
      "32": {
        "name": "字符串匹配",
        "sections": {
          "1": {"name": "朴素字符串匹配算法"},
          "2": {"name": "Rabin-Karp 算法"},
          "3": {"name": "利用有限自动机进行字符串匹配"},
          "4": {"name": "Knuth-Morris-Pratt 算法"}
        }
      },
      "33": {
        "name": "计算几何学",
        "sections": {
          "1": {"name": "线段的性质"},
          "2": {"name": "确认任意一对线段是否相交"},
          "3": {"name": "寻找凸包"},
          "4": {"name": "寻找最近点树"}
        }
      },
      "34": {
        "name": "NP 完全性",
        "sections": {
          "1": {"name": "多项式时间"},
          "2": {"name": "多项式时间的验证"},
          "3": {"name": "NP 完全性与可归纳性"},
          "4": {"name": "NP 完全性的证明"},
          "5": {"name": "NP 完全问题"}
        }
      },
      "35": {
        "name": "近似算法",
        "sections": {
          "1": {"name": "顶点覆盖问题"},
          "2": {"name": "旅行商问题"},
          "3": {"name": "集合覆盖问题"},
          "4": {"name": "随机化和线性规划"},
          "5": {"name": "子集合问题"}
        }
      }
    }
  }
}